import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import {
  useAccount,
  useConnect,
  useContractRead,
  useEnsName,
  useProvider,
} from "wagmi";
import { InjectedConnector } from "wagmi/connectors/injected";
import { useContract } from "wagmi";
import { YourContract, YourContract__factory } from "../types/ethers-contracts";
import { YourContractInterface } from "../types/ethers-contracts/YourContract";
import { ethers } from "ethers";

const Home: NextPage["getInitialProps"] = () => {
  const provider = useProvider();
  const contract = useContract({
    addressOrName: "0x5fbdb2315678afecb367f032d93f642f64180aa3",
    contractInterface: YourContract__factory.createInterface(),
    signerOrProvider: provider,
  });
  console.log("contract", contract);

  const { data: account } = useAccount();
  if (account) {
    const { data: ensName } = useEnsName({ address: account.address });
    console.log("ens", ensName);
  }
  /* const { connect } = useConnect({
    connector: new InjectedConnector(),
  }); */

  const { data, isError, isLoading } = useContractRead(
    {
      addressOrName: "0x5fbdb2315678afecb367f032d93f642f64180aa3",
      contractInterface: YourContract__factory.createInterface(),
    },
    "purpose"
  );

  console.log("purpose", contract.purpose());
  console.log("read", data);

  return (
    <div className={styles.container}>
      {isError == false && !isLoading == false ? (
        <title>{data}</title>
      ) : (
        <title></title>
      )}
      <Head>
        <title>RainbowKit App</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className={styles.title}>
          Welcome to <a href="">RainbowKit</a> + <a href="">wagmi</a> +{" "}
          <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://rainbowkit.com" className={styles.card}>
            <h2>RainbowKit Documentation &rarr;</h2>
            <p>Learn how to customize your wallet connection flow.</p>
          </a>

          <a href="https://wagmi.sh" className={styles.card}>
            <h2>wagmi Documentation &rarr;</h2>
            <p>Learn how to interact with Ethereum.</p>
          </a>

          <a
            href="https://github.com/rainbow-me/rainbowkit-examples"
            className={styles.card}
          >
            <h2>RainbowKit Examples &rarr;</h2>
            <p>Discover boilerplate example RainbowKit projects.</p>
          </a>

          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Next.js Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Next.js Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" target="_blank" rel="noopener noreferrer">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};

export default Home;
